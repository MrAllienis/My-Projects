from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
import asyncio


API_TOKEN = '7531137149:AAEyU9nqk0QGYnHX5Pr-dkYf5jcmFxDO3jQ'
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
CHANNEL_ID = '-1002202725655'


async def check_subscription(user_id: int) -> bool:
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        if member.status in ['member', 'administrator', 'creator']:
            return True
        else:
            return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    user_id = message.from_user.id
    yclid = ''
    web_app_url = "https://www.skidki186.ru/shops"
    if message.get_args():  # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        yclid = message.get_args()  # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä yclid
        web_app_url = "https://www.skidki186.ru/shops" + '?yclid=' + yclid
    if await check_subscription(user_id):
        welcome_text = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Ç–≤–æ–∏—Ö –ø–æ–∫—É–ø–∫–∞—Ö.\n–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:"
        web_app_button = InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", web_app=types.WebAppInfo(url=web_app_url))
        keyboard = InlineKeyboardMarkup().add(web_app_button)
        sent_message = await message.answer(welcome_text, reply_markup=keyboard)
        if message.get_args():
            web_app_url = "https://www.skidki186.ru/shops"
            # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            await asyncio.sleep(60)

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            new_button = InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", web_app=types.WebAppInfo(url=web_app_url))
            new_keyboard = InlineKeyboardMarkup().add(new_button)

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await bot.edit_message_text(
                chat_id=sent_message.chat.id,
                message_id=sent_message.message_id,
                text=welcome_text,
                reply_markup=new_keyboard
            )

    else:
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
        subscribe_button = InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª ‚úÖ", url="https://t.me/+meJdp3-tCTUxZjky")
        check_button = InlineKeyboardButton(text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è ‚úÖ", callback_data=f"check_subscription:{yclid}")
        keyboard = InlineKeyboardMarkup().add(subscribe_button).add(check_button)
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –∏ –∫—É–ø–æ–Ω–∞–º–∏, –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª", reply_markup=keyboard)


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('check_subscription:'))
async def process_subscription_check(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    web_app_url = "https://www.skidki186.ru/shops"
    if callback_query.data.split(":")[1]:
        yclid = callback_query.data.split(":")[1]
        web_app_url = "https://www.skidki186.ru/shops" + '?yclid=' + yclid

    if await check_subscription(user_id):
        await bot.answer_callback_query(callback_query.id)
        welcome_text = "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:"
        web_app_button = InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", web_app=types.WebAppInfo(url=web_app_url))
        keyboard = InlineKeyboardMarkup().add(web_app_button)
        sent_message = await bot.send_message(callback_query.from_user.id, welcome_text, reply_markup=keyboard)
        web_app_url = "https://www.skidki186.ru/shops"
        # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        await asyncio.sleep(60)

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        new_button = InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", web_app=types.WebAppInfo(url=web_app_url))
        new_keyboard = InlineKeyboardMarkup().add(new_button)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await bot.edit_message_text(
            chat_id=sent_message.chat.id,
            message_id=sent_message.message_id,
            text="üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:",
            reply_markup=new_keyboard
        )

    else:
        await bot.answer_callback_query(callback_query.id, text="–í—ã –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.", show_alert=True)


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è –≤ –Ø–Ω–¥–µ–∫—Å –ú–µ—Ç—Ä–∏–∫—É
def send_event_to_yandex_metrika(event_name, user_id):
    metrika_counter_id = '98592826'
    metrika_token = 'y0_AgAAAAB0d-z0AAyVIgAAAAET1WLrAAA0SeuxIqZOlKM6yXvxfuEYdakPGw'

    url = f'https://api-metrika.yandex.net/management/v1/counter/{metrika_counter_id}/event.json'
    headers = {
        'Authorization': f'OAuth {metrika_token}',
        'Content-Type': 'application/json'
    }
    data = {
        "event_name": event_name,
        "user_id": user_id
    }

    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 200:
        print("–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        print(f"–û—à–∏–±–∫–∞: {response.status_code}, {response.text}")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)